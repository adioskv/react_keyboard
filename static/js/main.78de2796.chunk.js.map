{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","key","handleDocumentKeyboardEvent","event","setState","document","addEventListener","this","removeEventListener","className","React","PureComponent","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAe,CACbC,IAAK,MAFT,EAaEC,4BAA8B,SAACC,GAC7B,EAAKC,SAAS,CAAEH,IAAKE,EAAMF,OAd/B,uDAKE,WACEI,SAASC,iBAAiB,QAASC,KAAKL,+BAN5C,kCASE,WACEG,SAASG,oBAAoB,QAASD,KAAKL,+BAV/C,oBAiBE,WACE,OACE,qBAAKO,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGF,KAAKP,MAAMC,IAAX,mCAC+BM,KAAKP,MAAMC,IAD1C,KAEG,kCAvBd,GAAyBS,IAAMC,e,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.78de2796.chunk.js","sourcesContent":["import React from 'react';\n\ninterface State {\n  key: string | null;\n}\n\nexport class App extends React.PureComponent {\n  state: State = {\n    key: null,\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleDocumentKeyboardEvent);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleDocumentKeyboardEvent);\n  }\n\n  handleDocumentKeyboardEvent = (event: KeyboardEvent) => {\n    this.setState({ key: event.key });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {this.state.key\n            ? `The last pressed key is [${this.state.key}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}